{"version":3,"sources":["util/firebase.js","components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Form","useState","title","setTitle","type","onChange","e","target","value","placeholder","className","onClick","todoRef","database","ref","todo","complete","length","alert","push","Todo","child","id","remove","update","TodoList","todoList","setTodoList","useEffect","on","snapshot","todos","val","map","index","App","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAcAA,IAASC,cAZc,CACrBC,OAAQ,0CACRC,WAAY,uCACZC,YACE,8EACFC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKFT,QAAf,ECbe,SAASU,IAAQ,IAAD,EACHC,mBAAS,IADN,mBACtBC,EADsB,KACfC,EADe,KAmB7B,OACE,iCACE,uBACEC,KAAK,OACLC,SApBiB,SAACC,GACtBH,EAASG,EAAEC,OAAOC,QAoBdA,MAAON,EACPO,YAAY,iBAEd,wBAAQL,KAAK,SAASM,UAAU,MAAMC,QArBvB,WACjB,IAAMC,EAAUtB,EAASuB,WAAWC,IAAI,QAClCC,EAAO,CACXb,QACAc,UAAU,GAEQ,GAAhBd,EAAMe,OACRC,MAAM,mBAENN,EAAQO,KAAKJ,GACbZ,EAAS,MAWT,oB,YC1BS,SAASiB,EAAT,GAAyB,IAATL,EAAQ,EAARA,KAW7B,OACE,sBAAKL,UAAU,gBAAf,UACE,oBAAIA,UAAWK,EAAKC,SAAW,WAAa,GAA5C,SAAiDD,EAAKb,QACtD,wBAAQS,QAbO,WACDrB,EAASuB,WAAWC,IAAI,QAAQO,MAAMN,EAAKO,IACnDC,UAWuBb,UAAU,YAAvC,oBAGA,wBAAQC,QAZS,WACHrB,EAASuB,WAAWC,IAAI,QAAQO,MAAMN,EAAKO,IACnDE,OAAO,CACbR,UAAWD,EAAKC,YASeN,UAAU,cAAzC,yBCjBS,SAASe,IAAY,IAAD,EACDxB,qBADC,mBAC1ByB,EAD0B,KAChBC,EADgB,KAejC,OAZAC,qBAAU,WACQtC,EAASuB,WAAWC,IAAI,QAChCe,GAAG,SAAS,SAACC,GACnB,IAAMC,EAAQD,EAASE,MACjBN,EAAW,GACjB,IAAK,IAAIJ,KAAMS,EACbL,EAASP,KAAT,aAAgBG,MAAOS,EAAMT,KAE/BK,EAAYD,QAEb,IAGD,8BACGA,EACGA,EAASO,KAAI,SAAClB,EAAMmB,GAAP,OAAiB,cAACd,EAAD,CAAML,KAAMA,GAAWmB,MACrD,KCHKC,MAff,WACE,OACE,qCACE,sBAAKzB,UAAU,MAAf,UACE,0CACA,cAACV,EAAD,IACA,cAACyB,EAAD,OAEF,oBAAGf,UAAU,OAAb,uBACY,sBAAM0B,MAAO,CAAEC,MAAO,OAAtB,oBADZ,mCCDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a21b7981.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDSoNaNOGJgztghDCPuU2Tzidqkgs9hmmw\",\r\n  authDomain: \"todo-react-app-21d0a.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://todo-react-app-21d0a-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"todo-react-app-21d0a\",\r\n  storageBucket: \"todo-react-app-21d0a.appspot.com\",\r\n  messagingSenderId: \"402667911887\",\r\n  appId: \"1:402667911887:web:dcfaa22350183ab41815ba\",\r\n  measurementId: \"G-7ZF55RLEVF\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"../util/firebase\";\r\n\r\nexport default function Form() {\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const createTodo = () => {\r\n    const todoRef = firebase.database().ref(\"Todo\");\r\n    const todo = {\r\n      title,\r\n      complete: false,\r\n    };\r\n    if (title.length == 0) {\r\n      alert(\"wpisz coś\");\r\n    } else {\r\n      todoRef.push(todo);\r\n      setTitle(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form>\r\n      <input\r\n        type=\"text\"\r\n        onChange={handleOnChange}\r\n        value={title}\r\n        placeholder=\"type here...\"\r\n      />\r\n      <button type=\"submit\" className=\"add\" onClick={createTodo}>\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport firebase from \"../util/firebase\";\r\nimport \"../App.css\";\r\n\r\nexport default function Todo({ todo }) {\r\n  const deleteTodo = () => {\r\n    const todoRef = firebase.database().ref(\"Todo\").child(todo.id);\r\n    todoRef.remove();\r\n  };\r\n  const completeTodo = () => {\r\n    const todoRef = firebase.database().ref(\"Todo\").child(todo.id);\r\n    todoRef.update({\r\n      complete: !todo.complete,\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"todoContainer\">\r\n      <h1 className={todo.complete ? \"complete\" : \"\"}>{todo.title}</h1>\r\n      <button onClick={deleteTodo} className=\"deleteBtn\">\r\n        Delete\r\n      </button>\r\n      <button onClick={completeTodo} className=\"completeBtn\">\r\n        Complete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../util/firebase\";\r\nimport Todo from \"./Todo\";\r\n\r\nexport default function TodoList() {\r\n  const [todoList, setTodoList] = useState();\r\n\r\n  useEffect(() => {\r\n    const todoRef = firebase.database().ref(\"Todo\");\r\n    todoRef.on(\"value\", (snapshot) => {\r\n      const todos = snapshot.val();\r\n      const todoList = [];\r\n      for (let id in todos) {\r\n        todoList.push({ id, ...todos[id] });\r\n      }\r\n      setTodoList(todoList);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {todoList\r\n        ? todoList.map((todo, index) => <Todo todo={todo} key={index} />)\r\n        : \"\"}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Todo App</h1>\n        <Form />\n        <TodoList />\n      </div>\n      <p className=\"byAh\">\n        Made with <span style={{ color: \"red\" }}>♥</span> by Adam Hałdaś\n      </p>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}